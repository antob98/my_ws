// Generated by gencpp from file my_control/Velocity.msg
// DO NOT EDIT!


#ifndef MY_CONTROL_MESSAGE_VELOCITY_H
#define MY_CONTROL_MESSAGE_VELOCITY_H

#include <ros/service_traits.h>


#include <my_control/VelocityRequest.h>
#include <my_control/VelocityResponse.h>


namespace my_control
{

struct Velocity
{

typedef VelocityRequest Request;
typedef VelocityResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Velocity
} // namespace my_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::my_control::Velocity > {
  static const char* value()
  {
    return "57be304b041c9bb67d96dd30f6852c26";
  }

  static const char* value(const ::my_control::Velocity&) { return value(); }
};

template<>
struct DataType< ::my_control::Velocity > {
  static const char* value()
  {
    return "my_control/Velocity";
  }

  static const char* value(const ::my_control::Velocity&) { return value(); }
};


// service_traits::MD5Sum< ::my_control::VelocityRequest> should match
// service_traits::MD5Sum< ::my_control::Velocity >
template<>
struct MD5Sum< ::my_control::VelocityRequest>
{
  static const char* value()
  {
    return MD5Sum< ::my_control::Velocity >::value();
  }
  static const char* value(const ::my_control::VelocityRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_control::VelocityRequest> should match
// service_traits::DataType< ::my_control::Velocity >
template<>
struct DataType< ::my_control::VelocityRequest>
{
  static const char* value()
  {
    return DataType< ::my_control::Velocity >::value();
  }
  static const char* value(const ::my_control::VelocityRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::my_control::VelocityResponse> should match
// service_traits::MD5Sum< ::my_control::Velocity >
template<>
struct MD5Sum< ::my_control::VelocityResponse>
{
  static const char* value()
  {
    return MD5Sum< ::my_control::Velocity >::value();
  }
  static const char* value(const ::my_control::VelocityResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_control::VelocityResponse> should match
// service_traits::DataType< ::my_control::Velocity >
template<>
struct DataType< ::my_control::VelocityResponse>
{
  static const char* value()
  {
    return DataType< ::my_control::Velocity >::value();
  }
  static const char* value(const ::my_control::VelocityResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MY_CONTROL_MESSAGE_VELOCITY_H
